{"version":3,"sources":["Providers.js","components/Layout.js","components/Home.js","components/About.js","components/Docs.js","App.js","serviceWorker.js","index.js"],"names":["PlayContext","React","createContext","PlayProvider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","title","inherits","createClass","key","value","react_default","a","createElement","Provider","children","Component","Layout","toggle","bind","assertThisInitialized","isOpen","prevProps","prevState","setState","reactstrap_es","dark","expand","href","onClick","navbar","className","tag","Link","to","contextType","Home","homeTitle","homeArch","homeTech","Providers_PlayProvider","components_Layout","fluid","About","md","size","offset","About_Info","About_List","List","Consumer","context","Info","_this2","_this$context","Docs","App","BrowserRouter","history","createHistory","basename","process","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ef7fdae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport const PlayContext = React.createContext(); // React 16.3 support\r\n\r\nexport class PlayProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: 'primary',\r\n            title: 'Context'\r\n        }\r\n    }\r\n   \r\n    render() {\r\n        return(\r\n            <PlayContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </PlayContext.Provider>\r\n        )\r\n    }\r\n}\r\n  \r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n } from 'reactstrap';\r\n//  import \"./Styles.css\";\r\nimport {PlayContext} from '../Providers';\r\n\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false\r\n        };\r\n    }\r\n\r\n    static contextType = PlayContext; //React 16.6 support\r\n\r\n    componentDidMount() {\r\n    \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        isOpen: !this.state.isOpen\r\n      });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">PWA-APP</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/about\">About</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                 <NavLink tag={Link} to=\"/docs\">Docs</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n            <div className=\"main\">\r\n                {this.props.children}\r\n            </div>\r\n            {/* <div>\r\n              <p className=\"footer text-center\">Copyright ©2019 Tim </p>\r\n            </div> */}\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Layout from './Layout';\r\nimport { PlayProvider} from '../Providers';\r\n// import \"./Styles.css\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n          homeTitle: \"主題\",\r\n          homeArch: \"Web & Desktop & AR/VR\",\r\n          homeTech: 'React + Electron + React360'\r\n    }\r\n  }  \r\n  render() {\r\n    return (\r\n      <PlayProvider>\r\n        <Layout>\r\n          <Container className=\"home\" fluid>\r\n                <h1>Home</h1>\r\n          </Container>\r\n        </Layout>\r\n      </PlayProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport Layout from '../components/Layout';\r\nimport {PlayContext, PlayProvider} from '../Providers';\r\n \r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n              title: ''\r\n        }\r\n    }  \r\n  \r\n    toggle = () => {\r\n      this.setState({\r\n          title: 'context'\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          <PlayProvider>\r\n            <Layout>\r\n              <Container fluid>\r\n                  <Row className=\"mt-5\">\r\n                      <Col md={{ size: 10, offset: 1 }}>\r\n                          <h1>About</h1>\r\n                          <Button color=\"success\">About {this.state.title}</Button>\r\n                          <Info toggle={this.toggle} />\r\n                          <List />\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n          </Layout>\r\n          </PlayProvider>\r\n      );\r\n    }\r\n  }\r\n\r\nclass List extends Component {\r\n   render() {\r\n       return(\r\n           <PlayContext.Consumer>\r\n            { (context) => (\r\n                <h1>This is Title List {context.title}</h1>\r\n            )}\r\n           </PlayContext.Consumer>\r\n       )\r\n   }\r\n}\r\n\r\nclass Info extends Component {\r\n   static contextType = PlayContext; //React 16.6 support\r\n\r\n   toggle = () => {\r\n       this.props.toggle();\r\n   }\r\n   render() {\r\n       let { color, title}  = this.context;\r\n       return(\r\n           <div>\r\n               <h1>PWA APP About Info 2</h1>\r\n               <Button \r\n                 color={color} \r\n                 onClick={this.toggle}>\r\n                 {title}\r\n               </Button>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Layout from './Layout';\r\nimport { PlayProvider} from '../Providers';\r\n\r\nclass Docs extends Component {\r\n  render() {\r\n    return (\r\n      <PlayProvider>\r\n        <Layout>\r\n          <Container fluid>\r\n            <Row className=\"mt-5\">\r\n              <Col md={{ size: 10, offset: 1 }}>\r\n                <h1>Docs</h1>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Layout>\r\n      </PlayProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Docs;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Docs from './components/Docs';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter history={createHistory({ basename: process.env.PUBLIC_URL })}>\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route path='/about' component={About}/>\r\n              <Route path='/docs' component={Docs}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}