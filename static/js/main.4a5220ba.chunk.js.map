{"version":3,"sources":["Providers.js","components/Layout.js","components/Home.js","components/About.js","components/Docs.js","App.js","serviceWorker.js","index.js"],"names":["PlayContext","React","createContext","PlayProvider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","title","account","inherits","createClass","key","value","react_default","a","createElement","Provider","children","Component","Layout","loginOutClick","sessionStorage","removeItem","history","push","toggle","bind","assertThisInitialized","isOpen","isLogin","email","setState","reactstrap_es","dark","expand","href","onClick","navbar","className","tag","Link","to","contextType","withRouter","Home","homeTitle","homeArch","homeTech","Providers_PlayProvider","components_Layout","fluid","md","size","offset","src","process","alt","Info","_this$context","context","assign","List","Consumer","About","_this2","handleClick","window","location","reload","About_Info","About_List","Docs","App","BrowserRouter","createHistory","basename","Switch","Route","exact","path","component","Redirect","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a5220ba.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const PlayContext = React.createContext(); // React 16.3 support\r\n\r\nexport class PlayProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: 'primary',\r\n            title: 'Context',\r\n            account: ''\r\n        }\r\n    }\r\n\r\n   \r\n    render() {\r\n        return(\r\n            <PlayContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </PlayContext.Provider>\r\n        )\r\n    }\r\n}\r\n  \r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button\r\n } from 'reactstrap';\r\n// import '../App.css';\r\nimport {PlayContext} from '../Providers';\r\n\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false,\r\n          isLogin: false\r\n        };\r\n    }\r\n\r\n    static contextType = PlayContext; //React 16.6 support\r\n\r\n    componentDidMount() {\r\n      let account = sessionStorage.email;\r\n      if(account) {\r\n          this.setState({\r\n              account: account,\r\n              isLogin: true\r\n          })\r\n      }else {\r\n          // this.props.history.push(\"/login\"); \r\n          this.setState({\r\n              account: '登入'\r\n          })\r\n      }\r\n  }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     let isLogin = sessionStorage.isLogin;\r\n    //     if(isLogin) {\r\n    //         this.props.history.push(\"/\");\r\n    //         console.log(isLogin); \r\n    //     }else {\r\n    //         this.props.history.push(\"/\"); \r\n    //         console.log(isLogin); \r\n    //     }\r\n    //   }\r\n    \r\n    loginOutClick = () => {\r\n      sessionStorage.removeItem('email');\r\n      sessionStorage.removeItem('password');\r\n      sessionStorage.removeItem('isLogin');\r\n      //直接重新整理\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        isOpen: !this.state.isOpen\r\n      });\r\n    }\r\n\r\n  render() {\r\n    // let isLogin = sessionStorage.isLogin;\r\n    // let { isLogin }  = this.context;\r\n    // console.log('登入狀態 : ' , isLogin);\r\n\r\n    return (\r\n        <div>\r\n          <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">PWA-APP</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/about\">About</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/docs\">Docs</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n            <div className=\"main\">\r\n                {this.props.children}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Layout);","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport Layout from '../components/Layout';\r\nimport { PlayProvider} from '../Providers';\r\nimport './Styles.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n          homeTitle: \"主題\",\r\n          homeArch: \"Web & Desktop & AR/VR\",\r\n          homeTech: 'React + Electron + React360'\r\n    }\r\n  } \r\n  render() {\r\n    let homeTitle = this.state.homeTitle;\r\n    let homeArch = this.state.homeArch;\r\n    let homeTech = this.state.homeTech;\r\n    return (\r\n      <PlayProvider>\r\n        <Layout>\r\n          <Container className=\"home\" fluid>\r\n            <Row className=\"topic-1 h-70\">                \r\n              <Row>\r\n                  <Col md={{ size: 12 }}>\r\n                    <h1 className=\"display-4 ml-2\">{homeTitle}</h1>\r\n                  </Col>\r\n                  <Col md={{ size: 6, offset: 1 }}>\r\n                    <div className=\"ml-3 mb-3\">\r\n                    <img src={process.env.PUBLIC_URL + '/images/pic80.jpg'} alt=\"80x80\" />\r\n                    </div>                         \r\n                  </Col>\r\n                  <Col md={{ size: 5 }}>\r\n                    <ul>\r\n                      <li>WEB技術實踐與紀錄</li>\r\n                      <li>未來WEB技術研究</li>\r\n                      <li>個人作品展示</li>  \r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n            </Row>\r\n            <Row className=\"topic-2 h-70\">\r\n              <Row>\r\n                  <Col md={{ size: 12 }}>\r\n                    <h1 className=\"display-4 ml-2\">{homeArch}</h1>\r\n                  </Col>\r\n                      <Col md={{ size: 4, offset: 2 }}>\r\n                        <ul>\r\n                          <li>漸進式網頁 (Progressive Web App)</li>\r\n                          <li>跨平台桌面應用 (Desktop App)</li>\r\n                          <li>可攜式擴增與虛擬實境應用(AR/VR App)</li>  \r\n                        </ul>                       \r\n                      </Col>\r\n                      <Col md={{ size: 4 }}>\r\n                        <div className=\"ml-3 mb-3\">\r\n                        <img src={process.env.PUBLIC_URL + '/images/pic80.jpg'} alt=\"80x80\" />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n            </Row>\r\n            <Row className=\"topic-3 h-70\">\r\n                <Row>\r\n                  <Col md={{ size: 12 }}>\r\n                  <h1 className=\"display-4 ml-2\">{homeTech}</h1>\r\n                  </Col>\r\n                  <Col md={{ size: 4, offset: 2 }}>\r\n                    <div className=\"ml-3 mb-3\">\r\n                    <img src={process.env.PUBLIC_URL + '/images/pic80.jpg'} alt=\"80x80\" />\r\n                    </div>                         \r\n                  </Col>\r\n                  <Col md={{ size: 4 }}>\r\n                    <ul>\r\n                      <li>使用 React 建構 PWA</li>\r\n                      <li>使用 Electron 建構 Desktop App</li>\r\n                      <li>使用 React 360 建構 AR/VR App</li>  \r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n            </Row>\r\n          </Container>\r\n        </Layout>\r\n      </PlayProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport Layout from '../components/Layout';\r\nimport {PlayContext, PlayProvider} from '../Providers';\r\n \r\nclass Info extends Component {\r\n     static contextType = PlayContext; //React 16.6 support\r\n\r\n    toggle = () => {\r\n        this.props.toggle();\r\n    }\r\n    render() {\r\n        let props = this.props;\r\n        let { color, title}  = this.context;\r\n        return(\r\n            <div>\r\n                <h1>PWA APP About Info 2</h1>\r\n                <Button \r\n                   {...props}\r\n                  color={color} onClick={this.toggle}>{title}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass List extends Component {\r\n   render() {\r\n       return(\r\n           <PlayContext.Consumer>\r\n            { (context) => (\r\n                <h1>This is Title List {context.title}</h1>\r\n            )}\r\n           </PlayContext.Consumer>\r\n       )\r\n   }\r\n}\r\n\r\nclass About extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n            title: ''\r\n      }\r\n  }\r\n\r\n\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n        title: 'context'\r\n    });\r\n  }\r\n\r\n handleClick = () => {\r\n    sessionStorage.removeItem('email');\r\n    sessionStorage.removeItem('password');\r\n    sessionStorage.removeItem('isLogin');\r\n    //直接重新整理\r\n    window.location.reload();\r\n }\r\n  render() {\r\n    return (\r\n        <PlayProvider>\r\n          <Layout>\r\n            <Container fluid>\r\n                <Row className=\"mt-5\">\r\n                    <Col md={{ size: 10, offset: 1 }}>\r\n                        <h1>About</h1>\r\n                        <Button color=\"success\">About {this.state.title}</Button>\r\n                        <Info toggle={this.toggle} />\r\n                        <List />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n        </PlayProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Layout from './Layout';\r\nimport { PlayProvider} from '../Providers';\r\n\r\nclass Docs extends Component {\r\n  render() {\r\n    return (\r\n      <PlayProvider>\r\n        <Layout>\r\n          <Container fluid>\r\n            <Row className=\"mt-5\">\r\n              <Col md={{ size: 10, offset: 1 }}>\r\n                <h1>Docs</h1>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Layout>\r\n      </PlayProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Docs;","import React, { Component } from 'react';\r\nimport { Router,BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n// import {  Container } from 'reactstrap';\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Docs from './components/Docs';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLogin: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <BrowserRouter history={createHistory({ basename: process.env.PUBLIC_URL })}>\r\n            <Switch>\r\n              <Route exact path='/' component={Home}/>      \r\n              <Route path='/docs' component={Docs}/>\r\n              <Route path='/about' component={About}/>\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}