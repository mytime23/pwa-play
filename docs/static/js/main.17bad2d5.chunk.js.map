{"version":3,"sources":["logo.svg","components/Login.js","Providers.js","components/Layout.js","components/Dashboard.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeEmail","e","setState","email","target","value","handleChangePassword","password","handleClick","event","preventDefault","state","message","sessionStorage","isLogin","history","push","react_default","a","createElement","reactstrap_es","color","console","log","fluid","className","md","size","offset","src","logo","alt","type","name","id","onChange","for","onClick","Component","PlayContext","React","createContext","PlayProvider","_Component","title","account","inherits","createClass","key","Redirect","to","Provider","children","Layout","loginOutClick","removeItem","toggle","bind","assertThisInitialized","isOpen","dark","expand","href","navbar","tag","Link","outline","Consumer","context","contextType","withRouter","Dashboard","Providers_PlayProvider","components_Layout","Info","_this$context","assign","List","About","_this2","window","location","reload","About_Info","About_List","App","BrowserRouter","createHistory","basename","process","Switch","Route","exact","path","render","components_Dashboard","component","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17bad2d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n// import { Redirect } from 'react-router-dom';\r\nimport {\r\n  Container, Card, CardHeader, CardBody, CardFooter, Row, Col, Form,\r\n  FormGroup, Label, Input, Alert,\r\n  Button,\r\n} from 'reactstrap';\r\nimport logo from '../logo.svg';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      message: '',\r\n      isLogin: false\r\n    }\r\n  }\r\n\r\n  handleChangeEmail = (e) => {\r\n    this.setState({\r\n      email : e.target.value\r\n    })\r\n  }\r\n \r\n  handleChangePassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value\r\n    })\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(this.state.email === '') {\r\n      this.setState({ message: \"Please input Email !\"});      \r\n    }\r\n\r\n    if(this.state.password === '') {\r\n      this.setState({ message : \"Please input Password !\"});\r\n    }\r\n\r\n    if(this.state.email === 'tim' && this.state.password === 'tim') {\r\n        sessionStorage.email = this.state.email;\r\n        sessionStorage.password = this.state.password;\r\n        sessionStorage.isLogin = true;\r\n        this.setState({ message : \"\", isLogin: true});\r\n        this.props.history.push(\"/\");\r\n\r\n    }else {\r\n        return this.setState({ message : \"Eamil or Password is Error !\"});\r\n    }\r\n\r\n  }\r\n\r\n//   async saveSession() {\r\n//     sessionStorage.email = this.state.email;\r\n//     sessionStorage.password = this.state.password;\r\n//     // this.props.history.push(\"/\");\r\n//   }\r\n\r\n  render() {\r\n    let email = this.state.email;\r\n    let password = this.state.password;\r\n    const message = (this.state.message ==='')\r\n          ?\"\"\r\n          :<Alert color=\"danger\">{this.state.message}</Alert>;\r\n    console.log('isLogin : ' + this.state.isLogin);\r\n    return (\r\n      <Container fluid>\r\n      <Row className=\"mt-5\">\r\n          <Col md={{ size: 4, offset: 4 }}>\r\n              <Card>\r\n                  <CardHeader><h3><img src={logo} className=\"App-logo\" alt=\"logo\" />Sign In</h3></CardHeader>\r\n                  <CardBody>\r\n                      <Form className=\"form\">            \r\n                          <FormGroup>\r\n                              <Label>Email</Label>\r\n                              <Input\r\n                                  type=\"email\"\r\n                                  name=\"email\"\r\n                                  id=\"exampleEmail\"\r\n                                  value= {email}\r\n                                  onChange={this.handleChangeEmail}\r\n                              />\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                              <Label for=\"examplePassword\">Password</Label>\r\n                              <Input\r\n                                  type=\"password\"\r\n                                  name=\"password\"\r\n                                  id=\"examplePassword\"\r\n                                  value={password}\r\n                                  onChange={this.handleChangePassword} \r\n                              />\r\n                          </FormGroup>                          \r\n                          <Button className=\"\" onClick={this.handleClick}>Submit</Button>\r\n                      </Form>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                     {message}\r\n                  </CardFooter>\r\n              </Card>\r\n          </Col>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const PlayContext = React.createContext(); // React 16.3 support\r\n\r\nexport class PlayProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: 'primary',\r\n            title: 'Context',\r\n            account: '',\r\n            isLogin: sessionStorage.isLogin\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let account = sessionStorage.email;\r\n        if(account) {\r\n            this.setState({\r\n                account: account + '  登出',\r\n                isLogin: true\r\n            })\r\n        }else {\r\n            // this.props.history.push(\"/login\"); \r\n            // this.setState({\r\n            //     account: '登入'\r\n            // })\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n    }\r\n   \r\n    render() {\r\n        // console.log('登入狀態 : ' , this.state.isLogin);\r\n        let isLogin = this.state.isLogin;\r\n        if(isLogin){\r\n            return( \r\n                <PlayContext.Provider value={this.state}>\r\n                    {this.props.children}\r\n                </PlayContext.Provider>)\r\n        } else {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        // return(\r\n        //     <PlayContext.Provider value={this.state}>\r\n        //         {this.props.children}\r\n        //     </PlayContext.Provider>\r\n        // )\r\n    }\r\n}\r\n  \r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button\r\n } from 'reactstrap';\r\n// import '../App.css';\r\nimport {PlayContext} from '../Providers';\r\n\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false,\r\n          isLogin: false\r\n        };\r\n    }\r\n\r\n    static contextType = PlayContext; //React 16.6 support\r\n\r\n    componentDidMount() {\r\n      let account = sessionStorage.email;\r\n      if(account) {\r\n          this.setState({\r\n              account: account,\r\n              isLogin: true\r\n          })\r\n      }else {\r\n          // this.props.history.push(\"/login\"); \r\n          this.setState({\r\n              account: '登入'\r\n          })\r\n      }\r\n  }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     let isLogin = sessionStorage.isLogin;\r\n    //     if(isLogin) {\r\n    //         this.props.history.push(\"/\");\r\n    //         console.log(isLogin); \r\n    //     }else {\r\n    //         this.props.history.push(\"/\"); \r\n    //         console.log(isLogin); \r\n    //     }\r\n    //   }\r\n    \r\n    loginOutClick = () => {\r\n      sessionStorage.removeItem('email');\r\n      sessionStorage.removeItem('password');\r\n      sessionStorage.removeItem('isLogin');\r\n      //直接重新整理\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        isOpen: !this.state.isOpen\r\n      });\r\n    }\r\n\r\n  render() {\r\n    // let isLogin = sessionStorage.isLogin;\r\n    // let { isLogin }  = this.context;\r\n    // console.log('登入狀態 : ' , isLogin);\r\n\r\n    return (\r\n        <div>\r\n          <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">PWA-APP</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/dashboard\">Dashboard</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/about\">About</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n\r\n              </NavItem>\r\n              <NavItem>\r\n                {'  '}\r\n                <Button outline color=\"primary\" onClick={this.loginOutClick}>\r\n                <PlayContext.Consumer>\r\n                  { (context) => (\r\n                    <span>{context.account}</span>\r\n                  )}\r\n                </PlayContext.Consumer> {'  '}\r\n                </Button>\r\n              </NavItem>  \r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n            <div className=\"main\">\r\n                {this.props.children}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Layout);","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport Layout from '../components/Layout';\r\nimport { PlayProvider} from '../Providers';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <PlayProvider>\r\n        <Layout>\r\n          <Container fluid>\r\n            <Row className=\"mt-5\">\r\n              <Col md={{ size: 10, offset: 1 }}>\r\n                <h1>Dashboard</h1>\r\n                <Button color=\"success\">Dashboard</Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Layout>\r\n      </PlayProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport Layout from '../components/Layout';\r\nimport {PlayContext, PlayProvider} from '../Providers';\r\n \r\nclass Info extends Component {\r\n     static contextType = PlayContext; //React 16.6 support\r\n\r\n    toggle = () => {\r\n        this.props.toggle();\r\n    }\r\n    render() {\r\n        let props = this.props;\r\n        let { color, title}  = this.context;\r\n        return(\r\n            <div>\r\n                <h1>PWA APP About Info 2</h1>\r\n                <Button \r\n                   {...props}\r\n                  color={color} onClick={this.toggle}>{title}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass List extends Component {\r\n   render() {\r\n       return(\r\n           <PlayContext.Consumer>\r\n            { (context) => (\r\n                <h1>This is Title List {context.title}</h1>\r\n            )}\r\n           </PlayContext.Consumer>\r\n       )\r\n   }\r\n}\r\n\r\nclass About extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n            title: ''\r\n      }\r\n  }\r\n\r\n\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n        title: 'context'\r\n    });\r\n  }\r\n\r\n handleClick = () => {\r\n    sessionStorage.removeItem('email');\r\n    sessionStorage.removeItem('password');\r\n    sessionStorage.removeItem('isLogin');\r\n    //直接重新整理\r\n    window.location.reload();\r\n }\r\n  render() {\r\n    return (\r\n        <PlayProvider>\r\n          <Layout>\r\n            <Container fluid>\r\n                <Row className=\"mt-5\">\r\n                    <Col md={{ size: 10, offset: 1 }}>\r\n                        <h1>About</h1>\r\n                        <Button color=\"success\">About {this.state.title}</Button>\r\n                        <Info toggle={this.toggle} />\r\n                        <List />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n        </PlayProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\nimport { Router,BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n// import {  Container } from 'reactstrap';\nimport createHistory from \"history/createBrowserHistory\";\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport About from './components/About';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false\n    }\n  }\n\n  render() {\n    return (\n        <BrowserRouter history={createHistory({ basename: process.env.PUBLIC_URL })}>\n            <Switch>\n              <Route exact path='/' render={() => {\n                        const isLogin = sessionStorage.isLogin;\n                        if(isLogin){\n                            return <Dashboard/>\n                        } else {\n                            return <Redirect to=\"/login\"/>\n                        }\n                    }}/>\n              <Route path='/dashboard' component={Dashboard}/>      \n              <Route path='/login' component={Login}/>\n              <Route path='/about' component={About}/>\n              <Redirect to=\"/\" />\n            </Switch>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}